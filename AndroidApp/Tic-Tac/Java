package com.example.dheer.tic_tac_game;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {


    int activePlayer = 0;
    int number = 0;
    int gameState[] = {2, 2, 2, 2, 2, 2, 2, 2, 2};
    int winningPositions[][] = {{0, 1, 2}, {3, 4, 5}, {6, 7, 8}, {0, 3, 6}, {1, 4, 7}, {2, 5, 8}, {0, 4, 8}, {2, 4, 6}};
    boolean exit = false;

    public void dropIn(View view) {

        if (number == 8) {

            TextView winnerMessage = (TextView) findViewById(R.id.winnerMessage);
            winnerMessage.setText("It is a Draw");
            LinearLayout layout = (LinearLayout) findViewById(R.id.playAgainLayout);

            layout.setVisibility(view.VISIBLE);


        }
        ImageView counter = (ImageView) view;

        System.out.println(counter.getTag().toString());
        int tappedCounter = Integer.parseInt(counter.getTag().toString());

        if (gameState[tappedCounter] == 2) {
            number++;
            gameState[tappedCounter] = activePlayer;
            counter.setTranslationY(-1000f);

            if (activePlayer == 0) {
                counter.setImageResource(R.drawable.o);
                activePlayer = 1;
            } else {
                counter.setImageResource(R.drawable.x);
                activePlayer = 0;

            }

            counter.animate().translationYBy(1000f).setDuration(300);

            for (int winningPosition[] : winningPositions) {
                if (gameState[winningPosition[0]] == gameState[winningPosition[1]] && gameState[winningPosition[1]] == gameState[winningPosition[2]] && gameState[winningPosition[0]] != 2) {
                    String winner = "X";

                    if (gameState[winningPosition[0]] == 0) {
                        winner = "O";
                    }

                    TextView winnerMessage = (TextView) findViewById(R.id.winnerMessage);
                    winnerMessage.setText(winner + " has Won !!!");

                    LinearLayout layout = (LinearLayout) findViewById(R.id.playAgainLayout);

                    layout.setVisibility(view.VISIBLE);


                }
            }

        }
    }

    public void restart(View view) {

        Intent intent = new Intent(MainActivity.this, MainActivity.class);
        startActivity(intent);
        finish();

    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    @Override
    public void onBackPressed() {
        //double back exit/
        Toast.makeText(MainActivity.this, "Press again to exit", Toast.LENGTH_SHORT).show();
        if (exit == true) {
            finish();
        }
        exit = true;
    }
}
        //alert boc exit
       /* AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setMessage("Do you want to quit");
        builder.setCancelable(false);



        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {

            }
        });







        builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                dialogInterface.cancel();
            }
        });

        AlertDialog alert = builder.create();
        alert.setTitle("Alert");
        alert.show();*/










